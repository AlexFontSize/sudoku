{"version":3,"sources":["Menu.jsx","Easy.jsx","Redux/easyReducer.js","EasyContainer.jsx","Win.jsx","GameOver.jsx","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["Menu","className","to","withRouter","props","useEffect","matrix","some","i","startGame","history","push","isWin","errors","window","onpopstate","setValue","e","target","dataset","value","indexArr","useState","newIndexArr","tbody","map","tr","trIndex","td","index","onClick","values","data-value","SET_VALUE","START_GAME","dataOptions","choiseOptions","Math","floor","random","this","options","length","initialState","randomOrtionsChoise","state","data","randomOrtions","start","JSON","stringify","parse","end","easyReducer","action","type","newState","connect","easy","Easy","Win","GameOver","App","render","exact","path","EasyContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f46f2f20.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\"\r\n\r\nexport const Menu = () => {\r\n    return (\r\n        <div className=\"menu\">\r\n            <h1>Судоку</h1>\r\n            <ul className=\"menu__body\">\r\n                <li><NavLink to=\"/easy\">Лёгкий</NavLink></li>\r\n                <li><NavLink to=\"/normal\">Средний</NavLink></li>\r\n                <li><NavLink to=\"/hard\">Сложный</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Easy = (props) => {\r\n    const isWin = () => {\r\n        for (let arr of props.matrix) {\r\n            if (arr.some(i => i === 0)) return;\r\n        };\r\n        props.startGame();\r\n        props.history.push(\"/win\");\r\n    };\r\n    const isOver = () => {\r\n        if (props.errors === 3) {\r\n            props.startGame();\r\n            props.history.push(\"/gameOver\");\r\n        };\r\n    };\r\n    useEffect(() => {\r\n        isWin();\r\n        isOver();\r\n        window.onpopstate = props.startGame;\r\n    }, [props.matrix, props.errors]);\r\n    const setValue = e => props.setValue(e.target.dataset.value, indexArr);\r\n    const [indexArr, newIndexArr] = useState([0, 0]);\r\n    const setActiveInput = (a, b) => newIndexArr([a, b])\r\n    const tbody = props.matrix.map((tr, trIndex) => {\r\n        return (\r\n            <tr key={`_${trIndex}`}>{tr.map((td, index) => {\r\n                return (\r\n                    <td className={(trIndex === indexArr[0] && index === indexArr[1]) ? \"td activeCeil\" : \"td\"} onClick={() => setActiveInput(trIndex, index)} key={`_${trIndex}_${index}`}>\r\n                        {td || \"\"}\r\n                    </td>\r\n                );\r\n            })}</tr>\r\n        );\r\n    });\r\n    const values = props.values.map((value) => {\r\n        return (\r\n            <span onClick={setValue} data-value={value} key={value}>{value}</span>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"easy\">\r\n            <table className=\"table\">\r\n                <tbody>{tbody}</tbody>\r\n            </table>\r\n            <div className=\"values\">{values}</div>\r\n            <div className=\"errors\">Ошибки: {props.errors}/3</div>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(Easy);","const SET_VALUE = \"Set value\";\r\nconst START_GAME = \"Start game\";\r\nconst dataOptions = {\r\n    choiseOptions() {\r\n        return Math.floor(Math.random() * this.options.length);\r\n    },\r\n    options: [\r\n        [\r\n            [\r\n                [2, 6, 4, 1, 3, 5],\r\n                [5, 1, 3, 6, 2, 4],\r\n                [3, 2, 6, 5, 4, 1],\r\n                [1, 4, 5, 2, 6, 3],\r\n                [4, 5, 2, 3, 1, 6],\r\n                [6, 3, 1, 4, 5, 2]\r\n            ],\r\n            [\r\n                [2, 6, 4, 1, 3, 5],\r\n                [5, 1, 3, 6, 2, 4],\r\n                [3, 2, 0, 5, 4, 1],\r\n                [1, 4, 5, 2, 6, 3],\r\n                [4, 5, 2, 3, 1, 6],\r\n                [6, 3, 1, 4, 5, 2]\r\n            ]\r\n        ],\r\n        /* [\r\n            [\r\n                [2, 6, 4, 1, 3, 5],\r\n                [5, 1, 3, 6, 2, 4],\r\n                [3, 2, 6, 5, 4, 1],\r\n                [1, 4, 5, 2, 6, 3],\r\n                [4, 5, 2, 3, 1, 6],\r\n                [6, 3, 1, 4, 5, 2]\r\n            ],\r\n            [\r\n                [2, 0, 0, 0, 0, 5],\r\n                [0, 0, 3, 6, 0, 0],\r\n                [3, 2, 0, 0, 4, 1],\r\n                [1, 4, 0, 0, 6, 3],\r\n                [0, 0, 2, 3, 0, 0],\r\n                [6, 0, 0, 0, 0, 2]\r\n            ]\r\n        ],\r\n        [\r\n            [\r\n                [2, 6, 4, 1, 3, 5],\r\n                [5, 1, 3, 6, 2, 4],\r\n                [3, 2, 6, 5, 4, 1],\r\n                [1, 4, 5, 2, 6, 3],\r\n                [4, 5, 2, 3, 1, 6],\r\n                [6, 3, 1, 4, 5, 2]\r\n            ],\r\n            [\r\n                [2, 0, 0, 0, 0, 5],\r\n                [0, 0, 3, 6, 0, 0],\r\n                [3, 2, 0, 0, 4, 1],\r\n                [1, 4, 0, 0, 6, 3],\r\n                [0, 0, 2, 3, 0, 0],\r\n                [6, 0, 0, 0, 0, 2]\r\n            ]\r\n        ],\r\n        [\r\n            [\r\n                [2, 6, 4, 1, 3, 5],\r\n                [5, 1, 3, 6, 2, 4],\r\n                [3, 2, 6, 5, 4, 1],\r\n                [1, 4, 5, 2, 6, 3],\r\n                [4, 5, 2, 3, 1, 6],\r\n                [6, 3, 1, 4, 5, 2]\r\n            ],\r\n            [\r\n                [2, 0, 0, 0, 0, 5],\r\n                [0, 0, 3, 6, 0, 0],\r\n                [3, 2, 0, 0, 4, 1],\r\n                [1, 4, 0, 0, 6, 3],\r\n                [0, 0, 2, 3, 0, 0],\r\n                [6, 0, 0, 0, 0, 2]\r\n            ]\r\n        ] */\r\n    ],\r\n};\r\nconst initialState = {\r\n    matrix: {},\r\n    values: [1, 2, 3, 4, 5, 6],\r\n    errors: 0\r\n};\r\nconst randomOrtionsChoise = (state, data) => {\r\n    let randomOrtions = data.choiseOptions();\r\n    let start = JSON.stringify(data.options[randomOrtions][1]);\r\n    start = JSON.parse(start);\r\n    let end = JSON.stringify(data.options[randomOrtions][0]);\r\n    end = JSON.parse(end);\r\n    return {\r\n        ...state,\r\n        matrix: { ...state.matrix, start, end },\r\n        errors: 0\r\n    };\r\n};\r\nconst easyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_VALUE:\r\n            let newState = {\r\n                ...state,\r\n                matrix: { ...state.matrix, start: [...state.matrix.start] }\r\n            };\r\n            if (state.matrix.end[action.indexArr[0]][action.indexArr[1]] === +action.value) {\r\n                newState.matrix.start[action.indexArr[0]][action.indexArr[1]] = +action.value;\r\n            } else {\r\n                newState.errors++;\r\n            };\r\n            return newState;\r\n        case START_GAME:\r\n            return randomOrtionsChoise(state, dataOptions);\r\n    };\r\n    return randomOrtionsChoise(state, dataOptions);\r\n};\r\nexport const setValue = (value, indexArr) => ({ type: SET_VALUE, value, indexArr });\r\nexport const startGame = () => ({ type: START_GAME });\r\nexport default easyReducer;","import { connect } from \"react-redux\";\r\nimport Easy from \"./Easy\";\r\nimport { setValue } from \"./Redux/easyReducer\";\r\nimport { startGame } from \"./Redux/easyReducer\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        matrix: state.easy.matrix.start,\r\n        values: state.easy.values,\r\n        errors: state.easy.errors,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {setValue, startGame})(Easy);","import { NavLink } from \"react-router-dom\"\r\nconst Win = () => {\r\n    return (\r\n        <div className=\"win\">\r\n            <p className=\"final\">Вы выиграли</p>\r\n            <NavLink className=\"final\" to=\"/menu\">Играть еще раз</NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default Win;","import { NavLink } from \"react-router-dom\"\r\nexport const GameOver = () => {\r\n    return (\r\n        <div className=\"gameOver\">\r\n            <p className=\"final\">Вы проиграли</p>\r\n            <NavLink className=\"final\" to=\"/menu\">Играть еще раз</NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default GameOver;","import './App.scss';\nimport { Route } from 'react-router';\nimport { Menu } from './Menu';\nimport EasyContainer from './EasyContainer';\nimport Win from './Win';\nimport GameOver from './GameOver';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route render={() => <Menu />} exact path={[\"/\", \"/menu\"]} />\n      <Route render={() => <EasyContainer />} path=\"/easy\" />\n      <Route render={() => <Win />} path=\"/win\" />\n      <Route render={() => <GameOver />} path=\"/gameOver\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport easyReducer from \"./easyReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    easy: easyReducer,\r\n});\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}